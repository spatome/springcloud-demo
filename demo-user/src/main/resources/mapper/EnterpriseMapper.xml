<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spatome.demo.user.dao.EnterpriseMapper" >
  <resultMap id="BaseResultMap" type="com.spatome.demo.core.entity.Enterprise" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="enterprise_no" property="enterpriseNo" jdbcType="VARCHAR" />
    <result column="enterprise_name" property="enterpriseName" jdbcType="VARCHAR" />
    <result column="descs" property="descs" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, version, enterprise_no, enterprise_name, descs, status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from enterprise
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from enterprise
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.spatome.demo.core.entity.Enterprise" useGeneratedKeys="true" keyProperty="id">
    insert into enterprise (id, version, enterprise_no, 
      enterprise_name, descs, status, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{version,jdbcType=BIGINT}, #{enterpriseNo,jdbcType=VARCHAR}, 
      #{enterpriseName,jdbcType=VARCHAR}, #{descs,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.spatome.demo.core.entity.Enterprise" useGeneratedKeys="true" keyProperty="id">
    insert into enterprise
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="enterpriseNo != null" >
        enterprise_no,
      </if>
      <if test="enterpriseName != null" >
        enterprise_name,
      </if>
      <if test="descs != null" >
        descs,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="enterpriseNo != null" >
        #{enterpriseNo,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseName != null" >
        #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="descs != null" >
        #{descs,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spatome.demo.core.entity.Enterprise" >
    update enterprise
    <set >
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="enterpriseNo != null" >
        enterprise_no = #{enterpriseNo,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseName != null" >
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="descs != null" >
        descs = #{descs,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spatome.demo.core.entity.Enterprise" >
    update enterprise
    set version = #{version,jdbcType=BIGINT},
      enterprise_no = #{enterpriseNo,jdbcType=VARCHAR},
      enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      descs = #{descs,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="selectByBean" resultMap="BaseResultMap" parameterType="com.spatome.demo.core.entity.Enterprise">
	select <include refid="Base_Column_List" />
	from enterprise T WHERE 1 = 1
      <if test="version != null" >
        AND version = #{version,jdbcType=BIGINT}
      </if>
      <if test="enterpriseNo != null" >
        AND enterprise_no = #{enterpriseNo,jdbcType=VARCHAR}
      </if>
      <if test="enterpriseName != null" >
        AND enterprise_name = #{enterpriseName,jdbcType=VARCHAR}
      </if>
      <if test="descs != null" >
        AND descs = #{descs,jdbcType=VARCHAR}
      </if>
      <if test="status != null" >
        AND status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="createTime != null" >
        AND create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null" >
        AND update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
  </select>

	<insert id="batchInsert" parameterType="java.util.List">
		<selectKey resultType ="java.lang.Long" keyProperty= "id" order= "AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	   	insert into enterprise (
			id,
			enterprise_no, 
      		enterprise_name,
      		descs,
      		status, 
      		create_time,
      		update_time
	    ) values
		<foreach collection ="list" item="item" index= "index" separator =",">
		(
			#{item.id,jdbcType=BIGINT},
			#{item.enterpriseNo,jdbcType=VARCHAR}, 
      		#{item.enterpriseName,jdbcType=VARCHAR},
      		#{item.descs,jdbcType=VARCHAR},
      		#{item.status,jdbcType=VARCHAR}, 
      		#{item.createTime,jdbcType=TIMESTAMP},
      		#{item.updateTime,jdbcType=TIMESTAMP}
		)
		</foreach>
	</insert>

  <select id="selectByEnterpriseNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from enterprise
    where enterprise_no = #{enterpriseNo,jdbcType=VARCHAR}
    LIMIT 1
  </select>
</mapper>